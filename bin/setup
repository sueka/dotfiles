#!/bin/bash
#
# sueka/dotfiles setup script
#

set -o errexit
set -o nounset
set -o pipefail

NOW=$(date +%s) # Unix time

#
# Copied from /usr/include/sysexits.h
#
EX_OK=0
EX_USAGE=64
EX_DATAERR=65
EX_NOINPUT=66
EX_NOUSER=67
EX_NOHOST=68
EX_UNAVAILABLE=69
EX_SOFTWARE=70
EX_OSERR=71
EX_OSFILE=72
EX_CANTCREAT=73
EX_IOERR=74
EX_TEMPFAIL=75
EX_PROTOCOL=76
EX_NOPERM=77
EX_CONFIG=78

DOTFILES_DIR=$(cd "$(dirname "$0")/.."; pwd) # /path/to/dotfiles

NAME=$(basename "$0") # setup

#
# check_dependencies
#
check_dependencies() {
	if (( $# != 0 )); then
		return $EX_USAGE
	fi

	ex=$EX_OK

	if ! command -v fzf >/dev/null; then
		echo_fatal "No command 'fzf' found." >&2
		ex=$EX_UNAVAILABLE
	fi

	return $ex
}

#
# main
#
main() {
	if (( $# != 0 )); then
		return $EX_USAGE
	fi

	home_dotfiles_dir="$DOTFILES_DIR/home"
	default_home=$HOME

	paths_to_dotfile=$(find "$home_dotfiles_dir" -type f | fzf --prompt "Hit tab on home dotfiles you install. QUERY> " --reverse --multi)

	printf %s "Enter path to your home directory [$default_home]: "
	IFS= read -r home

	echo "$paths_to_dotfile" | while IFS= read -r path_to_dotfile
	do
		install \
			"$path_to_dotfile" \
			"$(printf %s "$path_to_dotfile" | sed "s%^$home_dotfiles_dir%${home:-$default_home}%")"
	done
}

#
# install <source_path> <destination_path>
#
install() {
	if (( $# != 2 )); then
		return $EX_USAGE
	fi

	source_path=$1 && shift
	destination_path=$1 && shift

	# $source_path が存在しないか、または読み取り可能でない場合
	if ! [[ -r "$source_path" ]]; then
		return $EX_USAGE
	fi
	# 読み取り可能な $source_path が存在する

	# $destination_path が $source_path を参照するシンボリックリンクの場合
	if [ -L "$destination_path" ] && [[ "$source_path" -ef "$destination_path" ]]; then
		return $EX_OK
	fi
	# $destination_path は $source_path を参照するシンボリックリンクではない

	# $destination_path が存在する場合
	if [ -e "$destination_path" ]; then
		mv "$destination_path" "$destination_path.$NOW"
	fi

	ln -s "$source_path" "$destination_path"
}

#
# entry point
#
case "$NAME" in
	setup )
		check_dependencies
		main "$@"
	;;

	setup_test )
		check_dependencies
	;;

	* )
		return $EX_USAGE
	;;
esac
