#!/bin/bash
#
# sueka/dotfiles setup script
#

set -o errexit
set -o nounset
set -o pipefail

now=$(date +%s) # Unix time

#
# Copied from /usr/include/sysexits.h
#
EX_OK=0
EX_USAGE=64
EX_UNAVAILABLE=69

dotfiles_dir=$(cd "$(dirname "$0")/.."; pwd) # /path/to/dotfiles
name=$(basename "$0") # setup

check_deps() {
	if (( $# != 0 )); then
		return $EX_USAGE
	fi

	ex=$EX_OK

	if ! command -v fzf >/dev/null; then
		echo >&2 "No command 'fzf' found."
		ex=$EX_UNAVAILABLE
	fi

	return $ex
}

main() {
	if (( $# != 0 )); then
		return $EX_USAGE
	fi

	dotfiles_home_dir="$dotfiles_dir/home" # /path/to/dotfiles/home

	default_home=$HOME

	# List of paths (to /path/to/dotfiles/home/**/*) you want to install
	dotfile_paths=$(find "$dotfiles_home_dir" -type f | fzf --prompt "Hit tab on home dotfiles you install. QUERY> " --reverse --multi)

	printf %s "Enter path to your home directory [$default_home]: "
	IFS= read -r home

	echo "$dotfile_paths" | while IFS= read -r dotfile_path
	do
		install \
			"$dotfile_path" \
			"$(printf %s "$dotfile_path" | sed "s%^$dotfiles_home_dir%${home:-$default_home}%")"
	done
}

#
# install <src_path> <dest_path>
#
install() {
	if (( $# != 2 )); then
		return $EX_USAGE
	fi

	src_path=$1 && shift
	dest_path=$1 && shift

	# If $src_path does NOT EXIST or is UNREADABLE
	if ! [[ -r "$src_path" ]]; then
		return $EX_USAGE
	fi
	# $src_path EXISTS and is READABLE

	# If $dest_path is a SYMLINK to $src_path
	if [ -L "$dest_path" ] && [[ "$src_path" -ef "$dest_path" ]]; then
		return $EX_OK
	fi
	# $dest_path is NOT a SYMLINK to $src_path

	# If $dest_path EXISTS
	if [ -e "$dest_path" ]; then
		mv "$dest_path" "$dest_path.$now"
	fi
	# $dest_path does NOT EXIST

	ln -s "$src_path" "$dest_path"
}

#
# entry point
#
case "$name" in
	setup )
		check_deps
		main "$@"
	;;

	setup_test )
		check_deps
	;;

	* )
		return $EX_USAGE
	;;
esac
